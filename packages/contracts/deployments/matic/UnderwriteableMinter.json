{
  "address": "0xD7bb140b53EB814aa10f051B76B0e5b2458fBcAd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IGatewayRegistry",
          "name": "_registry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IGatewayRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_nHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "temporaryMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x473a8c1484ec5496a647529a25f2e829ee72062d91a327d68bd3a10caf9085ab",
  "receipt": {
    "to": null,
    "from": "0x8d27121F175a5799dDd6A18db4A7C838DB4422d4",
    "contractAddress": "0xD7bb140b53EB814aa10f051B76B0e5b2458fBcAd",
    "transactionIndex": 71,
    "gasUsed": "363867",
    "logsBloom": "0x
    "blockHash": "0x10d1455c5291c9c78653d415046682ae8a5b121553199b953d1a89933efb056c",
    "transactionHash": "0x473a8c1484ec5496a647529a25f2e829ee72062d91a327d68bd3a10caf9085ab",
    "logs": [
      {
        "transactionIndex": 71,
        "blockNumber": 16105976,
        "transactionHash": "0x473a8c1484ec5496a647529a25f2e829ee72062d91a327d68bd3a10caf9085ab",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008d27121f175a5799ddd6a18db4a7c838db4422d4",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000014f91759100800000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000132c36278ca5f1741beb0000000000000000000000000000000000000000000000000ddf672231d2ff8000000000000000000000000000000000000000000000132c3628dc3767051c6b",
        "logIndex": 801,
        "blockHash": "0x10d1455c5291c9c78653d415046682ae8a5b121553199b953d1a89933efb056c"
      }
    ],
    "blockNumber": 16105976,
    "cumulativeGasUsed": "17817821",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x21C482f153D0317fe85C60bE1F7fa079019fcEbD"
  ],
  "solcInputHash": "d99c620aa6f462b8ec16bdfc1094932d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IGatewayRegistry\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IGatewayRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_nHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"temporaryMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnderwriteableMinter.sol\":\"UnderwriteableMinter\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UnderwriteableMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.5;\\n\\ninterface IERC20 {\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n}\\n\\ninterface IGateway {\\n    function mint(\\n        bytes32 _pHash,\\n        uint256 _amount,\\n        bytes32 _nHash,\\n        bytes calldata _sig\\n    ) external returns (uint256);\\n\\n    function burn(bytes calldata _to, uint256 _amount)\\n        external\\n        returns (uint256);\\n}\\n\\ninterface IGatewayRegistry {\\n    function getGatewayBySymbol(string calldata _tokenSymbol)\\n        external\\n        view\\n        returns (IGateway);\\n\\n    function getTokenBySymbol(string calldata _tokenSymbol)\\n        external\\n        view\\n        returns (IERC20);\\n}\\n\\n// This is an evolving contract starting with just a simple mint.\\n// eventually we want to get to this flow:\\n//    user registers their lockAndMint on this contract\\n//    underwriter waits for a single confirmation of the deposit\\n//    underwriter underwrites the mint for a fee (0.3% ?) (maybe set by the user?)\\n//    underwriter watches the deposit and once it's confirmed, can come here and\\n//    claim the full amount\\n\\ncontract UnderwriteableMinter {\\n    IGatewayRegistry public registry;\\n\\n    constructor(IGatewayRegistry _registry) {\\n        registry = _registry;\\n    }\\n\\n    function temporaryMint(\\n        // Parameters from users\\n       address to,\\n       bytes32 nonce,\\n       string calldata symbol,\\n        // Parameters from Darknodes\\n        uint256        _amount,\\n        bytes32        _nHash,\\n        bytes calldata _sig\\n    ) external {\\n        bytes32 pHash = keccak256(abi.encode(to, nonce));\\n        uint256 mintedAmount = registry.getGatewayBySymbol(symbol).mint(pHash, _amount, _nHash, _sig);\\n        require(registry.getTokenBySymbol(symbol).transfer(to, mintedAmount), 'failed to transfer token');\\n    }\\n}\\n\",\"keccak256\":\"0x79fe73e649a842bb1a44138ec503bbe35fd7828edff0612ee2c41455620ae821\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105c13803806105c183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61052e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f73cbf31461003b5780637b10399914610050575b600080fd5b61004e61004936600461036c565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b604080516001600160a01b038a16602082015290810188905260009060600160408051601f1981840301815290829052805160209091012060008054633249b58f60e11b8452919350916001600160a01b03909116906364936b1e906100eb908b908b906004016104c4565b60206040518083038186803b15801561010357600080fd5b505afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b9190610434565b6001600160a01b031663159ab14d83888888886040518663ffffffff1660e01b815260040161016e959493929190610493565b602060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610451565b60005460405163efa74f1f60e01b81529192506001600160a01b03169063efa74f1f906101f3908b908b906004016104c4565b60206040518083038186803b15801561020b57600080fd5b505afa15801561021f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102439190610434565b60405163a9059cbb60e01b81526001600160a01b038c8116600483015260248201849052919091169063a9059cbb90604401602060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c7919061040b565b6103175760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207472616e7366657220746f6b656e0000000000000000604482015260640160405180910390fd5b50505050505050505050565b60008083601f84011261033557600080fd5b50813567ffffffffffffffff81111561034d57600080fd5b60208301915083602082850101111561036557600080fd5b9250929050565b60008060008060008060008060c0898b03121561038857600080fd5b8835610393816104e0565b975060208901359650604089013567ffffffffffffffff808211156103b757600080fd5b6103c38c838d01610323565b909850965060608b0135955060808b0135945060a08b01359150808211156103ea57600080fd5b506103f78b828c01610323565b999c989b5096995094979396929594505050565b60006020828403121561041d57600080fd5b8151801515811461042d57600080fd5b9392505050565b60006020828403121561044657600080fd5b815161042d816104e0565b60006020828403121561046357600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581528460208201528360408201526080606082015260006104b960808301848661046a565b979650505050505050565b6020815260006104d860208301848661046a565b949350505050565b6001600160a01b03811681146104f557600080fd5b5056fea2646970667358221220113278ad46fbfe0745351c1dd94e620b83c4585c6443b7fa5337860837c6ea8964736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636f73cbf31461003b5780637b10399914610050575b600080fd5b61004e61004936600461036c565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b604080516001600160a01b038a16602082015290810188905260009060600160408051601f1981840301815290829052805160209091012060008054633249b58f60e11b8452919350916001600160a01b03909116906364936b1e906100eb908b908b906004016104c4565b60206040518083038186803b15801561010357600080fd5b505afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b9190610434565b6001600160a01b031663159ab14d83888888886040518663ffffffff1660e01b815260040161016e959493929190610493565b602060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610451565b60005460405163efa74f1f60e01b81529192506001600160a01b03169063efa74f1f906101f3908b908b906004016104c4565b60206040518083038186803b15801561020b57600080fd5b505afa15801561021f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102439190610434565b60405163a9059cbb60e01b81526001600160a01b038c8116600483015260248201849052919091169063a9059cbb90604401602060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c7919061040b565b6103175760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207472616e7366657220746f6b656e0000000000000000604482015260640160405180910390fd5b50505050505050505050565b60008083601f84011261033557600080fd5b50813567ffffffffffffffff81111561034d57600080fd5b60208301915083602082850101111561036557600080fd5b9250929050565b60008060008060008060008060c0898b03121561038857600080fd5b8835610393816104e0565b975060208901359650604089013567ffffffffffffffff808211156103b757600080fd5b6103c38c838d01610323565b909850965060608b0135955060808b0135945060a08b01359150808211156103ea57600080fd5b506103f78b828c01610323565b999c989b5096995094979396929594505050565b60006020828403121561041d57600080fd5b8151801515811461042d57600080fd5b9392505050565b60006020828403121561044657600080fd5b815161042d816104e0565b60006020828403121561046357600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581528460208201528360408201526080606082015260006104b960808301848661046a565b979650505050505050565b6020815260006104d860208301848661046a565b949350505050565b6001600160a01b03811681146104f557600080fd5b5056fea2646970667358221220113278ad46fbfe0745351c1dd94e620b83c4585c6443b7fa5337860837c6ea8964736f6c63430008050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/UnderwriteableMinter.sol:UnderwriteableMinter",
        "label": "registry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IGatewayRegistry)58"
      }
    ],
    "types": {
      "t_contract(IGatewayRegistry)58": {
        "encoding": "inplace",
        "label": "contract IGatewayRegistry",
        "numberOfBytes": "20"
      }
    }
  }
}